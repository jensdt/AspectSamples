package jlo.association;

import java.util.List;
import java.util.ArrayList;
import java.util.HashSet;

public class MultiTransitiveAssociationEnd<FROM,MIDDLE,TO> implements AssociationEnd<TO> {
        connector first FROM -> [AssociationEnd<MIDDLE>]; 
        connector second MIDDLE -> [AssociationEnd<TO>];
	public MultiTransitiveAssociationEnd(FROM object) {	  subobject.object(object);
	}
	
	public subobject Property<FROM> object {
		export getValue() as object();
	};
	
	public List<TO> getObjects() {		HashSet<TO> result = new HashSet<TO>();
		List<? extends AssociationEnd<MIDDLE>> firsts = #first(object());
		int size = firsts.size();
		for(int i=0; i< size;i++) {			AssociationEnd<MIDDLE> first = firsts.get(i);
			List<MIDDLE> middles = first.getObjects();
		    for(MIDDLE middle:middles) {
		      List<? extends AssociationEnd<TO>> seconds = #second(middle);
		      AssociationEnd<TO> second = seconds.get(i);
			  result.addAll(second.getObjects());
		    }
		}
		return new ArrayList<TO>(result);
	}
	
}
